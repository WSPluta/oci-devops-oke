version: 0.1             
component: build
timeoutInSeconds: 1000
failImmediatelyOnError: true
shell: bash

env:
  exportedVariables:
    - HELLO_VERSION
    - AUTH_VERSION

steps:
  - type: Command
    name: "Install jq"
    command: |
      yum update -y
      yum install jq -y
  - type: Command
    name: "Set Environment"
    command: |
      npx zx scripts/setenv.mjs
  - type: Command
    name: "Print .env.json"
    command: |
      cat .env.json
  - type: Command
    name: "Test"
    command: |
      cat .env.json | jq '.'
  - type: Command
    name: "Print hello-server version"
    command: |
      export HELLO_VERSION=$(cat src/hello-server/package.json| jq .version)
      export AUTH_VERSION=$(cat src/auth-server/package.json| jq .version)
  # - type: Command
  #   name: "Docker Login"
  #   command: |
  #     export OCIR_URL=$(cat .env.json | grep containerRegistryURL | awk '{print $2}' | tr -d '",')
  #     export NAMESPACE=$(cat .env.json | grep namespace | awk '{print $2}' | tr -d '",')
  #     echo $OCI_OCIR_TOKEN | docker login $OCIR_URL --username "$NAMESPACE/$OCI_OCIR_USER" --password-stdin
  - type: Command
    name: "Build hello-server"
    command: |
      npx zx scripts/build.mjs hello-server
  - type: Command
    name: "Build auth-server"
    command: |
      npx zx scripts/build.mjs auth-server
  - type: Command
    name: "Check docker images"
    command: |
      docker images | grep server
  # - type: Command
  #   name: "OCI CLI get namespace"
  #   command: |
  #     oci os ns get --query 'data'

outputArtifacts:
  - name: hello-server
    type: DOCKER_IMAGE
    location: hello-server:${HELLO_VERSION}
  - name: auth-server
    type: DOCKER_IMAGE
    location: auth-server:${AUTH_VERSION}